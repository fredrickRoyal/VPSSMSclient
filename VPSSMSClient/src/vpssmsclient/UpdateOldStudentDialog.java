/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UpdateOldStudentDialog.java
 *
 * Created on Jun 19, 2014, 3:38:06 AM
 */
package vpssmsclient;

import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import vpssmsserver.ClassStream;
import vpssmsserver.StudentClass;
import vpssmsserver.StudentRegister;

/**
 *
 * @author Royal
 */
public class UpdateOldStudentDialog extends javax.swing.JDialog {

    public static String studentId;
    ArrayList<StudentClass> classList;
    ArrayList<ClassStream> oldStreamList;
    ArrayList<ClassStream> newStreamList;
    private StudentRegister studentRegister;

    /** Creates new form UpdateOldStudentDialog */
    public UpdateOldStudentDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.studentRegister = RegisterOldStudentWindow.studentRegister;
        try {
            classList = new Controller().getStudentClassList();
            oldStreamList = new Controller().getClassStreamList();
            if (classList.isEmpty()) {
            } else {
                for (int i = 0; i < classList.size(); i++) {
                    studentClass.addItem(classList.get(i).getName());
                }
            }
            if (!(oldStreamList.isEmpty())) {
                for (int i = 0; i < oldStreamList.size(); i++) {
                    classStream.addItem(oldStreamList.get(i).getName());
                }
            }
            studentName.setText(studentRegister.getStudentId());
            this.studentClass.setSelectedItem(studentRegister.getClassId());
            this.classStream.setSelectedItem(studentRegister.getStreamId());
            this.term.setSelectedItem(studentRegister.getAcademicTerm());
            this.status.setSelectedItem(studentRegister.getStatus());
            academicYear.setYear(Integer.parseInt(studentRegister.getAcademicYear()));
            studentId = new Controller().getStudentId(this.studentRegister.getRegisterId(), "studentregister", "RegisterId");
            Image img = Toolkit.getDefaultToolkit().createImage(new Controller().getImageData(studentId));
            ImageIcon icon = new ImageIcon(((new ImageIcon(img)).getImage()).getScaledInstance(studentPhoto.getWidth(), studentPhoto.getHeight(), java.awt.Image.SCALE_SMOOTH));
            studentPhoto.setText(null);
            studentPhoto.setIcon(icon);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        studentName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        studentClass = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        classStream = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        term = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox();
        academicYear = new com.toedter.calendar.JYearChooser();
        jLabel5 = new javax.swing.JLabel();
        register = new javax.swing.JButton();
        studentPhoto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setText("Student");

        studentName.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        studentName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        studentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentNameActionPerformed(evt);
            }
        });
        studentName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                studentNameKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel2.setForeground(new java.awt.Color(51, 102, 255));
        jLabel2.setText("Class");

        studentClass.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel3.setForeground(new java.awt.Color(51, 102, 255));
        jLabel3.setText("Stream");

        classStream.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel4.setForeground(new java.awt.Color(51, 102, 255));
        jLabel4.setText("Term");

        term.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        term.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Term 1", "Term 2", "Term 3" }));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel6.setForeground(new java.awt.Color(51, 102, 255));
        jLabel6.setText("Status");

        status.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "In-active" }));

        academicYear.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel5.setForeground(new java.awt.Color(51, 102, 255));
        jLabel5.setText("Academic Year");

        register.setFont(new java.awt.Font("Times New Roman", 0, 14));
        register.setText("Update");
        register.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionPerformed(evt);
            }
        });

        studentPhoto.setBackground(new java.awt.Color(153, 153, 153));
        studentPhoto.setText("                Photo");
        studentPhoto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(academicYear, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(term, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(studentClass, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(status, 0, 194, Short.MAX_VALUE)
                                    .addComponent(classStream, 0, 194, Short.MAX_VALUE)))
                            .addComponent(studentName, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addComponent(studentPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(register, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 357, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(studentName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(studentClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(classStream, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(term, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(academicYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel5)))
                        .addGap(18, 18, 18)
                        .addComponent(register, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(studentPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {academicYear, classStream, status, studentClass, studentName, term});

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void studentNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentNameActionPerformed
// TODO add your handling code here:
    try {
        StudentSearchDialog.searchRequestSource = "updateOldStudentRegister";
        StudentSearchDialog studentSearchDialog = new StudentSearchDialog(VPSSMSClient.mainWindow, true);
        studentSearchDialog.setLocation((int) (VPSSMSClient.width / 10), (int) (VPSSMSClient.height / 10));
        studentSearchDialog.setTitle("Search for Student");
        studentSearchDialog.setVisible(true);
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_studentNameActionPerformed

private void studentNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_studentNameKeyReleased
// TODO add your handling code here:
    try {
        StudentSearchDialog.searchRequestSource = "updateOldStudentRegister";
        StudentSearchDialog studentSearchDialog = new StudentSearchDialog(VPSSMSClient.mainWindow, true);
        studentSearchDialog.setLocation((int) (VPSSMSClient.width / 10), (int) (VPSSMSClient.height / 10));
        studentSearchDialog.setTitle("Search for Student");
        studentSearchDialog.setVisible(true);
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_studentNameKeyReleased

private void registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionPerformed
// TODO add your handling code here:
    try {
        if (studentId.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Select Student to Register");
        } else {
            boolean registered = new Controller().updateOldStudent(new StudentRegister(this.studentRegister.getRegisterId(),
                    studentId,
                    classList.get(studentClass.getSelectedIndex()).getClassId(),
                    oldStreamList.get(classStream.getSelectedIndex()).getStreamId(),
                    term.getSelectedItem().toString(),
                    Integer.toString(academicYear.getYear()),
                    status.getSelectedItem().toString()));
            if (registered == true) {
                JOptionPane.showMessageDialog(this, "Updated Successfully");
                RegisterOldStudentWindow.registerTable.setModel(new Controller().studentRegisterTableModel());
            } else {
                JOptionPane.showMessageDialog(this, "ERROR \n Update \n NOT\ncomplete. Please Try again...");
            }
        }

    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_registerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateOldStudentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateOldStudentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateOldStudentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateOldStudentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                UpdateOldStudentDialog dialog = new UpdateOldStudentDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JYearChooser academicYear;
    private javax.swing.JComboBox classStream;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton register;
    private javax.swing.JComboBox status;
    private javax.swing.JComboBox studentClass;
    public static javax.swing.JTextField studentName;
    public static javax.swing.JLabel studentPhoto;
    private javax.swing.JComboBox term;
    // End of variables declaration//GEN-END:variables
}
