/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StudentRegistrationWindow.java
 *
 * Created on Nov 27, 2013, 9:23:18 PM
 */
package vpssmsclient;

import javax.swing.JOptionPane;
import vpssmsserver.Guardian;
import vpssmsserver.Parent;
import vpssmsserver.Student;

/**
 *
 * @author Royal
 */
public class StudentRegistrationWindow extends javax.swing.JPanel {

    public static Student student;
    public static Parent parent;
    public static Guardian guardian;

    /** Creates new form StudentRegistrationWindow */
    public StudentRegistrationWindow() {
        initComponents();
        try {
            studentTable.setModel(new Controller().studentTableModel());
            parentTable.setModel(new Controller().parentTableModel());
            guardianTable.setModel(new Controller().GuardianTableModel());
            schoolAttendedTable.setModel(new Controller().SchoolAttendedTableModel());
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        addStudent = new javax.swing.JButton();
        updateStrudent = new javax.swing.JButton();
        deleteStudent = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        parentTable = new javax.swing.JTable();
        addParent = new javax.swing.JButton();
        updateParent = new javax.swing.JButton();
        deleteParent = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        guardianTable = new javax.swing.JTable();
        addGuadian = new javax.swing.JButton();
        editGuardian = new javax.swing.JButton();
        deleteGuardian = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        schoolAttendedTable = new javax.swing.JTable();
        addSchoolAttended = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        deleteSchool = new javax.swing.JButton();
        logout = new javax.swing.JLabel();

        studentTable.setFont(new java.awt.Font("Times New Roman", 0, 14));
        studentTable.setForeground(new java.awt.Color(102, 102, 102));
        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "First Name", "Last Name", "Other Name", "Gender", "Birth Place", "DOB", "District Of Origin", "Residence", "Nationality", "Religion", "Physical Disability", "Admission Date", "Contact", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        studentTable.setGridColor(new java.awt.Color(51, 51, 51));
        studentTable.setRowHeight(28);
        studentTable.setSelectionBackground(new java.awt.Color(0, 153, 0));
        studentTable.setSelectionForeground(new java.awt.Color(249, 242, 242));
        jScrollPane1.setViewportView(studentTable);

        addStudent.setText("Add");
        addStudent.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentActionPerformed(evt);
            }
        });

        updateStrudent.setText("Edit");
        updateStrudent.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateStrudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateStrudentActionPerformed(evt);
            }
        });

        deleteStudent.setText("Delete");
        deleteStudent.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStudentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addStudent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateStrudent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteStudent))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1259, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addStudent, deleteStudent, updateStrudent});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateStrudent)
                    .addComponent(deleteStudent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addStudent, deleteStudent, updateStrudent});

        jTabbedPane2.addTab("Student", jPanel2);

        parentTable.setFont(new java.awt.Font("Times New Roman", 0, 14));
        parentTable.setForeground(new java.awt.Color(102, 102, 102));
        parentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Student Name", "First Name", "Last Name", "Other Name", "Occupation", "Residence", "Relationship", "Contact"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        parentTable.setGridColor(new java.awt.Color(51, 51, 51));
        parentTable.setRowHeight(28);
        parentTable.setSelectionBackground(new java.awt.Color(0, 153, 0));
        parentTable.setSelectionForeground(new java.awt.Color(249, 242, 242));
        jScrollPane2.setViewportView(parentTable);

        addParent.setText("Add");
        addParent.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addParent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addParentActionPerformed(evt);
            }
        });

        updateParent.setText("Edit");
        updateParent.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateParent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateParentActionPerformed(evt);
            }
        });

        deleteParent.setText("Delete");
        deleteParent.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteParent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteParentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addParent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateParent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteParent)
                .addContainerGap(1064, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1279, Short.MAX_VALUE)
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addParent, deleteParent, updateParent});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addParent, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateParent)
                    .addComponent(deleteParent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addParent, deleteParent, updateParent});

        jTabbedPane2.addTab("Parent", jPanel3);

        guardianTable.setFont(new java.awt.Font("Times New Roman", 0, 14));
        guardianTable.setForeground(new java.awt.Color(102, 102, 102));
        guardianTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Student ID", "Student Name", "First Name", "Last Name", "Other Name", "Occupation", "Residence", "Gender", "Contact"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        guardianTable.setGridColor(new java.awt.Color(51, 51, 51));
        guardianTable.setRowHeight(28);
        guardianTable.setSelectionBackground(new java.awt.Color(0, 153, 0));
        guardianTable.setSelectionForeground(new java.awt.Color(249, 242, 242));
        jScrollPane4.setViewportView(guardianTable);

        addGuadian.setText("Add");
        addGuadian.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addGuadian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGuadianActionPerformed(evt);
            }
        });

        editGuardian.setText("Edit");
        editGuardian.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editGuardian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editGuardianActionPerformed(evt);
            }
        });

        deleteGuardian.setText("Delete");
        deleteGuardian.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteGuardian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteGuardianActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1259, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(addGuadian)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editGuardian)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteGuardian)))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addGuadian, deleteGuardian, editGuardian});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addGuadian, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editGuardian)
                    .addComponent(deleteGuardian))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addGuadian, deleteGuardian, editGuardian});

        jTabbedPane2.addTab("Guardian", jPanel5);

        schoolAttendedTable.setFont(new java.awt.Font("Times New Roman", 0, 14));
        schoolAttendedTable.setForeground(new java.awt.Color(102, 102, 102));
        schoolAttendedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Student", "Name", "Duration", "Qualification", "Reason For Change", "Status"
            }
        ));
        schoolAttendedTable.setGridColor(new java.awt.Color(51, 51, 51));
        schoolAttendedTable.setRowHeight(28);
        schoolAttendedTable.setSelectionBackground(new java.awt.Color(0, 153, 0));
        schoolAttendedTable.setSelectionForeground(new java.awt.Color(249, 242, 242));
        jScrollPane5.setViewportView(schoolAttendedTable);

        addSchoolAttended.setText("Add");
        addSchoolAttended.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addSchoolAttended.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSchoolAttendedActionPerformed(evt);
            }
        });

        jButton8.setText("Edit");
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        deleteSchool.setText("Delete");
        deleteSchool.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteSchool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSchoolActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1249, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(addSchoolAttended)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteSchool)))
                .addContainerGap())
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addSchoolAttended, deleteSchool, jButton8});

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSchoolAttended, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8)
                    .addComponent(deleteSchool))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addSchoolAttended, deleteSchool, jButton8});

        jTabbedPane2.addTab("Schools Attended", jPanel6);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1284, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 676, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Student Biography", jPanel1);

        logout.setText("Logout");
        logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1289, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(logout)
                .addContainerGap(1212, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(logout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
// TODO add your handling code here:
    try {
        VPSSMSClient.mainWindow.setContentPane(new TaskSelectionMenu());
        VPSSMSClient.mainWindow.setVisible(true);
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_logoutMouseClicked

private void addStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentActionPerformed
// TODO add your handling code here:
    try {
        AddNewStudentDialog addNewStudentDialog = new AddNewStudentDialog(VPSSMSClient.mainWindow, true);
        addNewStudentDialog.setLocation((int) (VPSSMSClient.width / 10), (int) (VPSSMSClient.height / 10));
        addNewStudentDialog.setVisible(true);
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_addStudentActionPerformed

private void addParentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addParentActionPerformed
// TODO add your handling code here:
    try {
        AddParentDialog addParentDialog = new AddParentDialog(VPSSMSClient.mainWindow, true);
        addParentDialog.setLocation((int) (VPSSMSClient.width / 10), (int) (VPSSMSClient.height / 10));
        addParentDialog.setVisible(true);
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_addParentActionPerformed

private void addGuadianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGuadianActionPerformed
// TODO add your handling code here:
    try {
        AddGuadianDialog addGuadianDialog = new AddGuadianDialog(VPSSMSClient.mainWindow, true);
        addGuadianDialog.setLocation((int) (VPSSMSClient.width / 10), (int) (VPSSMSClient.height / 10));
        addGuadianDialog.setVisible(true);
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_addGuadianActionPerformed

private void addSchoolAttendedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSchoolAttendedActionPerformed
// TODO add your handling code here:
    try {
        AddSchoolAttendedDialog addSchoolAttendedDialog = new AddSchoolAttendedDialog(VPSSMSClient.mainWindow, true);
        addSchoolAttendedDialog.setLocation((int) (VPSSMSClient.width / 8), (int) (VPSSMSClient.height / 10));
        addSchoolAttendedDialog.setVisible(true);
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_addSchoolAttendedActionPerformed

private void deleteStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStudentActionPerformed
// TODO add your handling code here:
    try {
        int row = studentTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please Select Record");
        } else {
            Object id = studentTable.getModel().getValueAt(row, 0);
            int deleteResponse = JOptionPane.showInternalConfirmDialog(this, "Are You sure Want to DELETE\n the Selected Record?");
            if (deleteResponse == 0) {
                boolean deleted = new Controller().deleteRecord(id.toString(), "Student", "StudentId");
                if (deleted == true) {
                    JOptionPane.showMessageDialog(null, "Student Deleted Successfully");
                    studentTable.setModel(new Controller().studentTableModel());
                } else {
                    JOptionPane.showMessageDialog(null, "ERROR\nStudent\n NOT Deleted Successfully.. Please try again");
                }
            }
        }
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_deleteStudentActionPerformed

private void deleteParentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteParentActionPerformed
// TODO add your handling code here:
    try {
        int row = parentTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please Select Record");
        } else {
            Object id = parentTable.getModel().getValueAt(row, 0);
            int deleteResponse = JOptionPane.showInternalConfirmDialog(this, "Are You sure Want to DELETE\n the Selected Record?");
            if (deleteResponse == 0) {
                boolean deleted = new Controller().deleteRecord(id.toString(), "Parent", "ParentId");
                if (deleted == true) {
                    JOptionPane.showMessageDialog(null, "Parent Record Deleted Successfully");
                    parentTable.setModel(new Controller().parentTableModel());
                } else {
                    JOptionPane.showMessageDialog(null, "ERROR\nParent Record\n NOT Deleted Successfully.. Please try again");
                }
            }
        }
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_deleteParentActionPerformed

private void deleteGuardianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteGuardianActionPerformed
// TODO add your handling code here:
    try {
        int row = guardianTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please Select Record");
        } else {
            Object id = guardianTable.getModel().getValueAt(row, 0);
            int deleteResponse = JOptionPane.showInternalConfirmDialog(this, "Are You sure Want to DELETE\n the Selected Record?");
            if (deleteResponse == 0) {
                boolean deleted = new Controller().deleteRecord(id.toString(), "Guardian", "GuardianId");
                if (deleted == true) {
                    JOptionPane.showMessageDialog(null, "Guardian Record Deleted Successfully");
                    guardianTable.setModel(new Controller().GuardianTableModel());
                } else {
                    JOptionPane.showMessageDialog(null, "ERROR\nGuardian Record\n NOT Deleted Successfully.. Please try again");
                }
            }
        }
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_deleteGuardianActionPerformed

private void deleteSchoolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSchoolActionPerformed
// TODO add your handling code here:
    try {
        int row = schoolAttendedTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please Select Record");
        } else {
            Object id = schoolAttendedTable.getModel().getValueAt(row, 0);
            int deleteResponse = JOptionPane.showInternalConfirmDialog(this, "Are You sure Want to DELETE\n the Selected Record?");
            if (deleteResponse == 0) {
                boolean deleted = new Controller().deleteRecord(id.toString(), "Attendedschool", "SchoolId");
                if (deleted == true) {
                    JOptionPane.showMessageDialog(null, "Record Deleted Successfully");
                    schoolAttendedTable.setModel(new Controller().SchoolAttendedTableModel());
                } else {
                    JOptionPane.showMessageDialog(null, "ERROR\nRecord\n NOT Deleted Successfully.. Please try again");
                }
            }
        }
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_deleteSchoolActionPerformed

private void updateStrudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateStrudentActionPerformed
// TODO add your handling code here:
    try {
        int row = studentTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, row + " \nPlease Select Record");
        } else {
            student = new Student();
            student.setStudentId(studentTable.getModel().getValueAt(row, 0).toString());
            student.setFirstName(studentTable.getModel().getValueAt(row, 1).toString());
            student.setLastName(studentTable.getModel().getValueAt(row, 2).toString());
            student.setOtherName(studentTable.getModel().getValueAt(row, 3).toString());
            student.setImageData(null);
            student.setGender(studentTable.getModel().getValueAt(row, 4).toString());
            student.setBirthPlace(studentTable.getModel().getValueAt(row, 5).toString());
            student.setDOB(studentTable.getModel().getValueAt(row, 6).toString());
            student.setDistrict(studentTable.getModel().getValueAt(row, 7).toString());
            student.setResidence(studentTable.getModel().getValueAt(row, 8).toString());
            student.setNationality(studentTable.getModel().getValueAt(row, 9).toString());
            student.setReligion(studentTable.getModel().getValueAt(row, 10).toString());
            student.setDisability(studentTable.getModel().getValueAt(row, 11).toString());
            student.setAdmissionDate(studentTable.getModel().getValueAt(row, 12).toString());
            student.setContact(studentTable.getModel().getValueAt(row, 13).toString());
            student.setStatus(studentTable.getModel().getValueAt(row, 14).toString());
            UpdateStudentRegistrationDialog updateStudentRegistrationDialog = new UpdateStudentRegistrationDialog(null, true);
            updateStudentRegistrationDialog.setLocation((int) (VPSSMSClient.width / 10), (int) (VPSSMSClient.height / 10));
            updateStudentRegistrationDialog.setVisible(true);
        }


    } catch (Exception ex) {
        System.err.println(ex.getMessage() + "\nERROR from updateStudentActionPerformed Method");

    }
}//GEN-LAST:event_updateStrudentActionPerformed

private void updateParentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateParentActionPerformed
// TODO add your handling code here:
    try {
        int row = parentTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, row + " \nPlease Select Record");
        } else {
            parent = new Parent();
            parent.setParentId(parentTable.getModel().getValueAt(row, 0).toString());
            parent.setStudentId(parentTable.getModel().getValueAt(row, 1).toString());
            parent.setFirstName(parentTable.getModel().getValueAt(row, 2).toString());
            parent.setLastName(parentTable.getModel().getValueAt(row, 3).toString());
            parent.setOtherName(parentTable.getModel().getValueAt(row, 4).toString());
            //student.setImageData(null);
            parent.setOccupation(parentTable.getModel().getValueAt(row, 5).toString());
            parent.setResidence(parentTable.getModel().getValueAt(row, 6).toString());
            parent.setRelationship(parentTable.getModel().getValueAt(row, 7).toString());
            parent.setContact(parentTable.getModel().getValueAt(row, 8).toString());
            parent.setStatus(parentTable.getModel().getValueAt(row, 9).toString());

            UpdateParentDialog updateParentDialog = new UpdateParentDialog(null, true);
            updateParentDialog.setLocation((int) (VPSSMSClient.width / 10), (int) (VPSSMSClient.height / 10));
            updateParentDialog.setVisible(true);
        }


    } catch (Exception ex) {
        System.out.println(ex.getMessage() + "\nERROR from updateParentActionPerformed Method");
    }

}//GEN-LAST:event_updateParentActionPerformed

private void editGuardianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editGuardianActionPerformed
// TODO add your handling code here:
    try {
        int row = guardianTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, row + " \nPlease Select Record");
        } else {
            guardian = new Guardian();
            guardian.setGuardianId(guardianTable.getModel().getValueAt(row, 0).toString());
            guardian.setStudentId(guardianTable.getModel().getValueAt(row, 1).toString());
            guardian.setFirstName(guardianTable.getModel().getValueAt(row, 2).toString());
            guardian.setLastName(guardianTable.getModel().getValueAt(row, 3).toString());
            guardian.setOtherName(guardianTable.getModel().getValueAt(row, 4).toString());
            guardian.setOccupation(guardianTable.getModel().getValueAt(row, 5).toString());
            guardian.setResidence(guardianTable.getModel().getValueAt(row, 6).toString());
            guardian.setGender(guardianTable.getModel().getValueAt(row, 7).toString());
            guardian.setContact(guardianTable.getModel().getValueAt(row, 8).toString());
            guardian.setStatus(guardianTable.getModel().getValueAt(row, 9).toString());
            UpdateGuadianDialog updateguardianDialog = new UpdateGuadianDialog(null, true);
            updateguardianDialog.setLocation((int) (VPSSMSClient.width / 10), (int) (VPSSMSClient.height / 10));
            updateguardianDialog.setVisible(true);
        }


    } catch (Exception ex) {
        System.out.println(ex.getMessage() + "\nERROR from editGuardianActionPerformed Method");
    }
}//GEN-LAST:event_editGuardianActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addGuadian;
    private javax.swing.JButton addParent;
    private javax.swing.JButton addSchoolAttended;
    private javax.swing.JButton addStudent;
    private javax.swing.JButton deleteGuardian;
    private javax.swing.JButton deleteParent;
    private javax.swing.JButton deleteSchool;
    private javax.swing.JButton deleteStudent;
    private javax.swing.JButton editGuardian;
    public static javax.swing.JTable guardianTable;
    private javax.swing.JButton jButton8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel logout;
    public static javax.swing.JTable parentTable;
    public static javax.swing.JTable schoolAttendedTable;
    public static javax.swing.JTable studentTable;
    private javax.swing.JButton updateParent;
    private javax.swing.JButton updateStrudent;
    // End of variables declaration//GEN-END:variables
}
