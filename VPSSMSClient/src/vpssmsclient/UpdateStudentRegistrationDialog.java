/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UpdateStudentRegistrationDialog.java
 *
 * Created on Jun 8, 2014, 4:54:22 AM
 */
package vpssmsclient;

import java.awt.FileDialog;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import vpssmsserver.Student;

/**
 *
 * @author Royal
 */
public class UpdateStudentRegistrationDialog extends javax.swing.JDialog {

    private Student student;
    private String photoFile;

    /** Creates new form UpdateStudentRegistrationDialog */
    public UpdateStudentRegistrationDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        student = StudentRegistrationWindow.student;
        try {
            this.firstName.setText(student.getFirstName());
            this.lastName.setText(student.getLastName());
            this.middleName.setText(student.getOtherName());
            this.gender.setSelectedItem(student.getGender());
            this.birthPlace.setText(student.getBirthPlace());
            ((JTextField) dob.getDateEditor().getUiComponent()).setText(student.getDOB());
            this.district.setText(student.getDistrict());
            this.residence.setText(student.getResidence());
            this.nationality.setText(student.getNationality());
            this.religion.setText(student.getReligion());
            this.disability.setText(student.getDisability());
            ((JTextField) this.admissionDate.getDateEditor().getUiComponent()).setText(student.getAdmissionDate());
            this.contact.setText(student.getContact());
            this.status.setSelectedItem(student.getStatus());
            Image img = Toolkit.getDefaultToolkit().createImage(new Controller().getImageData(student.getStudentId()));
            ImageIcon icon = new ImageIcon(((new ImageIcon(img)).getImage()).getScaledInstance(photo.getWidth(), photo.getHeight(), java.awt.Image.SCALE_SMOOTH));
            this.photo.setText(null);
            this.photo.setIcon(icon);

        } catch (Exception ex) {
            System.out.println(ex.getMessage() + "\nERROR form UpdateStudentRegistrationDialog Contrustor");
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        firstName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lastName = new javax.swing.JTextField();
        gender = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        middleName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        birthPlace = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dob = new com.toedter.calendar.JDateChooser();
        photo = new javax.swing.JLabel();
        browseStudentPhoto = new javax.swing.JButton();
        clearPhoto = new javax.swing.JButton();
        residence = new javax.swing.JTextField();
        district = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nationality = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        religion = new javax.swing.JTextField();
        admissionDate = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        disability = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        contact = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox();
        update = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        firstName.setFont(new java.awt.Font("Times New Roman", 1, 18));
        firstName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setText("First Name");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel2.setForeground(new java.awt.Color(51, 102, 255));
        jLabel2.setText("Last Name");

        lastName.setFont(new java.awt.Font("Times New Roman", 1, 18));
        lastName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        gender.setFont(new java.awt.Font("Times New Roman", 1, 14));
        gender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel4.setForeground(new java.awt.Color(51, 102, 255));
        jLabel4.setText("Gender");

        middleName.setFont(new java.awt.Font("Times New Roman", 1, 18));
        middleName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel3.setForeground(new java.awt.Color(51, 102, 255));
        jLabel3.setText("Midle Name");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel5.setForeground(new java.awt.Color(51, 102, 255));
        jLabel5.setText("Place Of Birth");

        birthPlace.setFont(new java.awt.Font("Times New Roman", 1, 18));
        birthPlace.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel6.setForeground(new java.awt.Color(51, 102, 255));
        jLabel6.setText("Date Of Birth");

        dob.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dob.setDateFormatString(" d/MMM/yyyy");
        dob.setFont(new java.awt.Font("Times New Roman", 1, 18));

        photo.setBackground(new java.awt.Color(153, 153, 153));
        photo.setFont(new java.awt.Font("Times New Roman", 1, 12));
        photo.setText("                Photo");
        photo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        browseStudentPhoto.setFont(new java.awt.Font("Times New Roman", 0, 14));
        browseStudentPhoto.setText("Upload");
        browseStudentPhoto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        browseStudentPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseStudentPhotoActionPerformed(evt);
            }
        });

        clearPhoto.setFont(new java.awt.Font("Times New Roman", 0, 14));
        clearPhoto.setText("Clear");
        clearPhoto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearPhotoActionPerformed(evt);
            }
        });

        residence.setFont(new java.awt.Font("Times New Roman", 1, 18));
        residence.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        district.setFont(new java.awt.Font("Times New Roman", 1, 18));
        district.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel7.setForeground(new java.awt.Color(51, 102, 255));
        jLabel7.setText("District Of Origin");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel9.setForeground(new java.awt.Color(51, 102, 255));
        jLabel9.setText("Nationality");

        nationality.setFont(new java.awt.Font("Times New Roman", 1, 18));
        nationality.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel10.setForeground(new java.awt.Color(51, 102, 255));
        jLabel10.setText("Religion");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel8.setForeground(new java.awt.Color(51, 102, 255));
        jLabel8.setText("Residence");

        religion.setFont(new java.awt.Font("Times New Roman", 1, 18));
        religion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        admissionDate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        admissionDate.setDateFormatString(" d/MMM/yyyy");
        admissionDate.setFont(new java.awt.Font("Times New Roman", 1, 18));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel12.setForeground(new java.awt.Color(51, 102, 255));
        jLabel12.setText("Admission Date");

        disability.setFont(new java.awt.Font("Times New Roman", 1, 18));
        disability.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel11.setForeground(new java.awt.Color(51, 102, 255));
        jLabel11.setText("Physical Diability");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel13.setForeground(new java.awt.Color(51, 102, 255));
        jLabel13.setText("Contact");

        contact.setFont(new java.awt.Font("Times New Roman", 1, 18));
        contact.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel14.setForeground(new java.awt.Color(51, 102, 255));
        jLabel14.setText("Status");

        status.setFont(new java.awt.Font("Times New Roman", 1, 14));
        status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "In-active" }));

        update.setText("Update");
        update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(nationality)
                                        .addComponent(district)
                                        .addComponent(birthPlace)
                                        .addComponent(middleName)
                                        .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(disability, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel10))
                                        .addGap(22, 22, 22))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(contact, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel14)
                                .addGap(68, 68, 68)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(religion, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(gender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(residence, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                            .addComponent(admissionDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(status, 0, 253, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(424, 424, 424)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(browseStudentPhoto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(photo, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {admissionDate, birthPlace, contact, disability, district, dob, firstName, gender, lastName, middleName, nationality, religion, residence, status});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(photo, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(browseStudentPhoto)
                            .addComponent(clearPhoto)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(251, 251, 251)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(admissionDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(disability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel11)
                                        .addComponent(jLabel12))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel1))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(middleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel2)
                                            .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel5)
                                            .addComponent(birthPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(district, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(nationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel10)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(residence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(religion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14))
                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {admissionDate, birthPlace, contact, disability, district, dob, firstName, gender, lastName, middleName, nationality, religion, residence, status});

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void browseStudentPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseStudentPhotoActionPerformed
// TODO add your handling code here:
    ImageIcon img;
    try {
        FileDialog fd = new FileDialog(VPSSMSClient.mainWindow, "Open", FileDialog.LOAD);
        fd.show();
        if (fd.getFile() == null) {
            //Label1.setText("You have not select");
        } else {
            String photoURL = (fd.getDirectory() + fd.getFile());
            photoFile = photoURL;
            img = new ImageIcon(((new ImageIcon(photoURL)).getImage()).getScaledInstance(photo.getWidth(), photo.getHeight(), java.awt.Image.SCALE_SMOOTH));
            photo.setIcon(img);
            photo.setText("");
            //photo.setIcon(new javax.swing.ImageIcon(getClass().getResource(d)));
        }

    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_browseStudentPhotoActionPerformed

private void clearPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearPhotoActionPerformed
// TODO add your handling code here:
    try {
        photo.setIcon(null);
        photoFile = "";
        photo.setText("                Photo");
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_clearPhotoActionPerformed

private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
// TODO add your handling code here:
    try {
        String studentId = student.getStudentId();
        if (firstName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "ERROR \nPlease Enter First Name");
        } else if (lastName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "ERROR \nPlease Enter Last Name");
        } else if (birthPlace.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "ERROR \nPlease Enter Place Of Birth");
        } else if (dob.getDate().toString().isEmpty()) {
            JOptionPane.showMessageDialog(null, "ERROR \nPlease Enter Date Of Birth");
        } else if (district.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "ERROR \nPlease Enter District of Origin");
        } else if (residence.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "ERROR \nPlease Enter Residence");
        } else if (nationality.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "ERROR \nPlease Enter Nationality");
        } else if (religion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "ERROR \nPlease Enter Religion");
        } else if (admissionDate.getDate().toString().isEmpty()) {
            JOptionPane.showMessageDialog(null, "ERROR \nPlease Enter Date of Admission");
        }else if(photoFile.isEmpty()||photo.getIcon()==null){
            JOptionPane.showMessageDialog(null, "ERROR \nPlease Get a Passport photo");
        }
        else {
            if (middleName.getText().isEmpty()) {
                middleName.setText("None");
            }
            if (disability.getText().isEmpty()) {
                disability.setText("None");
            }
            if (contact.getText().isEmpty()) {
                contact.setText("None");
            }
            boolean updated = new Controller().updateStudent(new Student(
                    studentId,
                    firstName.getText(),
                    lastName.getText(),
                    middleName.getText(),
                    photoFile,
                    gender.getSelectedItem().toString(),
                    birthPlace.getText(),
                    ((JTextField) dob.getDateEditor().getUiComponent()).getText(),
                    district.getText(),
                    residence.getText(),
                    nationality.getText(),
                    religion.getText(),
                    disability.getText(),
                    ((JTextField) admissionDate.getDateEditor().getUiComponent()).getText(),
                    contact.getText(),
                    status.getSelectedItem().toString()));
            if (updated == true) {
                JOptionPane.showMessageDialog(null, "Student Updated successfully");
                StudentRegistrationWindow.studentTable.setModel(new Controller().studentTableModel());

            } else {
                JOptionPane.showMessageDialog(null, "ERROR \n Student \nNOT \nUpdated");
            }
        }

    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }

}//GEN-LAST:event_updateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateStudentRegistrationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateStudentRegistrationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateStudentRegistrationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateStudentRegistrationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                UpdateStudentRegistrationDialog dialog = new UpdateStudentRegistrationDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser admissionDate;
    private javax.swing.JTextField birthPlace;
    private javax.swing.JButton browseStudentPhoto;
    private javax.swing.JButton clearPhoto;
    private javax.swing.JTextField contact;
    private javax.swing.JTextField disability;
    private javax.swing.JTextField district;
    private com.toedter.calendar.JDateChooser dob;
    private javax.swing.JTextField firstName;
    private javax.swing.JComboBox gender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField lastName;
    private javax.swing.JTextField middleName;
    private javax.swing.JTextField nationality;
    private javax.swing.JLabel photo;
    private javax.swing.JTextField religion;
    private javax.swing.JTextField residence;
    private javax.swing.JComboBox status;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
