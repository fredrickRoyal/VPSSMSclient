/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EnterResultsDialog.java
 *
 * Created on Dec 13, 2013, 1:38:45 PM
 */
package vpssmsclient;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import vpssmsserver.Paper;
import vpssmsserver.StudentResult;
import vpssmsserver.Subject;

/**
 *
 * @author Royal
 */
public class EnterResultsDialog extends javax.swing.JDialog {

    private ArrayList<Subject> subjectList;
    private ArrayList<Paper> paperList;
    public static String studentId;

    /** Creates new form EnterResultsDialog */
    public EnterResultsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        try {
            subjectList = new Controller().getSubjectList();
            paperList = new Controller().getPaperList();
            if (!(subjectList.isEmpty())) {
                for (int i = 0; i < subjectList.size(); i++) {
                    subject.addItem(subjectList.get(i).getName());
                }

            }
            if (!(paperList.isEmpty())) {
                for (int i = 0; i < paperList.size(); i++) {
                    paper.addItem(paperList.get(i).getName() + "      |      " + paperList.get(i).getCode());
                }
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        studentName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        subject = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        paper = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        term = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        year = new com.toedter.calendar.JYearChooser();
        jLabel6 = new javax.swing.JLabel();
        holidayWork = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        BOT = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        midTerm = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        EOT = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox();
        saveResult = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setText("Student");

        studentName.setFont(new java.awt.Font("Times New Roman", 1, 18));
        studentName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        studentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentNameActionPerformed(evt);
            }
        });
        studentName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                studentNameKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel2.setForeground(new java.awt.Color(51, 102, 255));
        jLabel2.setText("Subject");

        subject.setFont(new java.awt.Font("Times New Roman", 1, 18));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel3.setForeground(new java.awt.Color(51, 102, 255));
        jLabel3.setText("Paper");

        paper.setFont(new java.awt.Font("Times New Roman", 1, 18));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel4.setForeground(new java.awt.Color(51, 102, 255));
        jLabel4.setText("Term");

        term.setFont(new java.awt.Font("Times New Roman", 1, 14));
        term.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Term 1", "Term 2", "Term 3" }));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel5.setForeground(new java.awt.Color(51, 102, 255));
        jLabel5.setText("Year");

        year.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        year.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel6.setForeground(new java.awt.Color(51, 102, 255));
        jLabel6.setText("Holiday Work");

        holidayWork.setFont(new java.awt.Font("Times New Roman", 1, 24));
        holidayWork.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        holidayWork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holidayWorkActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel7.setForeground(new java.awt.Color(51, 102, 255));
        jLabel7.setText("B.O.T");

        BOT.setFont(new java.awt.Font("Times New Roman", 1, 24));
        BOT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel8.setForeground(new java.awt.Color(51, 102, 255));
        jLabel8.setText("Mid-Term");

        midTerm.setFont(new java.awt.Font("Times New Roman", 1, 24));
        midTerm.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel9.setForeground(new java.awt.Color(51, 102, 255));
        jLabel9.setText("E.O.T");

        EOT.setFont(new java.awt.Font("Times New Roman", 1, 24));
        EOT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel10.setForeground(new java.awt.Color(51, 102, 255));
        jLabel10.setText("Status");

        status.setFont(new java.awt.Font("Times New Roman", 1, 14));
        status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "In-active" }));

        saveResult.setFont(new java.awt.Font("Times New Roman", 1, 14));
        saveResult.setText("Save");
        saveResult.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveResultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentName, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(status, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(EOT)
                                .addComponent(midTerm)
                                .addComponent(BOT)
                                .addComponent(holidayWork)
                                .addComponent(paper, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(subject, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(term, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(year, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(saveResult, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(191, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {BOT, EOT, holidayWork, midTerm, paper, status, studentName, subject});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(studentName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(paper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(term, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(holidayWork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(BOT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(midTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(EOT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(saveResult, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {BOT, EOT, holidayWork, midTerm, paper, status, studentName, subject, term, year});

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void holidayWorkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holidayWorkActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_holidayWorkActionPerformed

private void studentNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentNameActionPerformed
// TODO add your handling code here:
    try {
        //StudentSearchDialog.searchRequestSource = "Guardian";
        StudentRegisterTable studentSearchDialog = new StudentRegisterTable(VPSSMSClient.mainWindow, true);
        studentSearchDialog.setLocation((int) (VPSSMSClient.width / 10), (int) (VPSSMSClient.height / 10));
        studentSearchDialog.setTitle("Search for Student");
        studentSearchDialog.setVisible(true);
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_studentNameActionPerformed

private void studentNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_studentNameKeyReleased
// TODO add your handling code here:
    try {
        //StudentSearchDialog.searchRequestSource = "Guardian";
        StudentRegisterTable studentSearchDialog = new StudentRegisterTable(VPSSMSClient.mainWindow, true);
        studentSearchDialog.setLocation((int) (VPSSMSClient.width / 10), (int) (VPSSMSClient.height / 10));
        studentSearchDialog.setTitle("Search for Student");
        studentSearchDialog.setVisible(true);

    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_studentNameKeyReleased

private void saveResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveResultActionPerformed
// TODO add your handling code here:
    try {
        if ((new Controller().isInteger(holidayWork.getText().trim()) == false) && (holidayWork.getText().length() > 0)) {
            JOptionPane.showMessageDialog(this, "ERROR \nPlease Enter Holiday Marks as Numbers");
        } else if ((new Controller().isInteger(BOT.getText().trim()) == false) && (BOT.getText().length() > 0)) {
            JOptionPane.showMessageDialog(this, "ERROR \nPlease Enter B.O.T Marks as Numbers");
        } else if ((new Controller().isInteger(midTerm.getText().trim()) == false) && (midTerm.getText().length() > 0)) {
            JOptionPane.showMessageDialog(this, "ERROR \nPlease Enter Mid-term Marks as Numbers");
        } else if ((new Controller().isInteger(EOT.getText().trim()) == false) && (EOT.getText().length() > 0)) {
            JOptionPane.showMessageDialog(this, "ERROR \nPlease Enter E.O.T Marks as Numbers");
        } else if (studentId == null) {
            JOptionPane.showMessageDialog(this, "ERROR \nPlease Select Student Whose \nmarks are to be Recorded");
        } else {
            String holz = holidayWork.getText().trim();
            String bot = BOT.getText().trim();
            String mid = midTerm.getText().trim();
            String eot = EOT.getText().trim();
            if (holz.isEmpty()) {
                holz = "-1";
            }
            if (bot.isEmpty()) {
                bot = "-1";
            }
            if (mid.isEmpty()) {
                mid = "-1";
            }
            if (eot.isEmpty()) {
                eot = "-1";
            }
            boolean recorded = new Controller().recordStudentResults(new StudentResult(
                    new Controller().generateId(),
                    studentId,
                    subjectList.get(subject.getSelectedIndex()).getSubjectId(),
                    paperList.get(paper.getSelectedIndex()).getId(),
                    term.getSelectedItem().toString(),
                    Integer.toString(year.getYear()),
                    Integer.parseInt(holz),
                    Integer.parseInt(bot),
                    Integer.parseInt(mid),
                    Integer.parseInt(eot),
                    status.getSelectedItem().toString()));
            if (recorded == true) {
                JOptionPane.showMessageDialog(this, "Student's Marks Recorded successfully");
                EnterResultsWindow.studentResultTable.setModel(new Controller().studentResultTableModel());
            } else {
                JOptionPane.showMessageDialog(this, "ERROR \nStudent's Marks\n NOT\n Recorded. Please try again");
            }
        }

    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_saveResultActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnterResultsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnterResultsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnterResultsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnterResultsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                EnterResultsDialog dialog = new EnterResultsDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BOT;
    private javax.swing.JTextField EOT;
    private javax.swing.JTextField holidayWork;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField midTerm;
    private javax.swing.JComboBox paper;
    private javax.swing.JButton saveResult;
    private javax.swing.JComboBox status;
    public static javax.swing.JTextField studentName;
    private javax.swing.JComboBox subject;
    private javax.swing.JComboBox term;
    private com.toedter.calendar.JYearChooser year;
    // End of variables declaration//GEN-END:variables
}
