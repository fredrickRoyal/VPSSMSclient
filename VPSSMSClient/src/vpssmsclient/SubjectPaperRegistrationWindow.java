/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SubjectPaperRegistrationWindow.java
 *
 * Created on Dec 6, 2013, 11:45:37 PM
 */
package vpssmsclient;

import javax.swing.JOptionPane;

/**
 *
 * @author Royal
 */
public class SubjectPaperRegistrationWindow extends javax.swing.JPanel {

    /** Creates new form SubjectPaperRegistrationWindow */
    public SubjectPaperRegistrationWindow() {
        initComponents();
        try{
            paperTable.setModel(new Controller().paperTableModel());
            subjectPaperTable.setModel(new Controller().subjectPaperRegisterTableModel());
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        paperTable = new javax.swing.JTable();
        createPaper = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        deleteSubjectPaper = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        subjectPaperTable = new javax.swing.JTable();
        addPaper = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        deleteSubjectPaperRegister = new javax.swing.JButton();
        logout = new javax.swing.JLabel();

        paperTable.setFont(new java.awt.Font("Times New Roman", 0, 14));
        paperTable.setForeground(new java.awt.Color(102, 102, 102));
        paperTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Paper Name", "Paper Code", "Status", "Creation Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        paperTable.setGridColor(new java.awt.Color(51, 51, 51));
        paperTable.setRowHeight(28);
        paperTable.setSelectionBackground(new java.awt.Color(0, 153, 0));
        paperTable.setSelectionForeground(new java.awt.Color(249, 242, 242));
        jScrollPane14.setViewportView(paperTable);

        createPaper.setFont(new java.awt.Font("Times New Roman", 0, 14));
        createPaper.setText("Create");
        createPaper.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        createPaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPaperActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jButton2.setText("Edit");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        deleteSubjectPaper.setFont(new java.awt.Font("Times New Roman", 0, 14));
        deleteSubjectPaper.setText("Delete");
        deleteSubjectPaper.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteSubjectPaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSubjectPaperActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 1173, Short.MAX_VALUE))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(createPaper, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(deleteSubjectPaper)))
                .addContainerGap())
        );

        jPanel19Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {createPaper, deleteSubjectPaper, jButton2});

        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createPaper, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(deleteSubjectPaper))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel19Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {createPaper, deleteSubjectPaper, jButton2});

        jTabbedPane5.addTab("Create Subject Papers", jPanel19);

        subjectPaperTable.setFont(new java.awt.Font("Times New Roman", 0, 14));
        subjectPaperTable.setForeground(new java.awt.Color(102, 102, 102));
        subjectPaperTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Subject Name", "Paper Name", "Paper Code", "Status", "Academic year"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        subjectPaperTable.setGridColor(new java.awt.Color(51, 51, 51));
        subjectPaperTable.setRowHeight(28);
        subjectPaperTable.setSelectionBackground(new java.awt.Color(0, 153, 0));
        subjectPaperTable.setSelectionForeground(new java.awt.Color(249, 242, 242));
        jScrollPane15.setViewportView(subjectPaperTable);

        addPaper.setFont(new java.awt.Font("Times New Roman", 0, 14));
        addPaper.setText("Add");
        addPaper.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addPaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPaperActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jButton5.setText("Edit");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        deleteSubjectPaperRegister.setFont(new java.awt.Font("Times New Roman", 0, 14));
        deleteSubjectPaperRegister.setText("Delete");
        deleteSubjectPaperRegister.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteSubjectPaperRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSubjectPaperRegisterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 1173, Short.MAX_VALUE))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(addPaper, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addGap(18, 18, 18)
                        .addComponent(deleteSubjectPaperRegister)))
                .addContainerGap())
        );

        jPanel20Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addPaper, deleteSubjectPaperRegister, jButton5});

        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPaper, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5)
                    .addComponent(deleteSubjectPaperRegister))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel20Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addPaper, deleteSubjectPaperRegister, jButton5});

        jTabbedPane5.addTab("Register Subject Paper", jPanel20);

        logout.setText("Logout");
        logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1198, Short.MAX_VALUE)
                    .addComponent(logout))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(logout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
// TODO add your handling code here:
    try{
        VPSSMSClient.mainWindow.setContentPane(new TaskSelectionMenu());
        VPSSMSClient.mainWindow.setVisible(true);
    }catch(Exception ex){
    System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_logoutMouseClicked

private void createPaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPaperActionPerformed
// TODO add your handling code here:
    try {
        CreateNewPaperDialog createNewPaperDialog = new CreateNewPaperDialog(VPSSMSClient.mainWindow, true);
        createNewPaperDialog.setLocation((int) (VPSSMSClient.width / 8), (int) (VPSSMSClient.height / 10));
        createNewPaperDialog.setTitle("Create Subject Papers");
        createNewPaperDialog.setVisible(true);
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_createPaperActionPerformed

private void addPaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPaperActionPerformed
// TODO add your handling code here:
    try {
        PaperSubjectRegistrationDialog paperSubjectRegistrationDialog = new PaperSubjectRegistrationDialog(VPSSMSClient.mainWindow, true);
        paperSubjectRegistrationDialog.setLocation((int) (VPSSMSClient.width / 8), (int) (VPSSMSClient.height / 10));
        paperSubjectRegistrationDialog.setTitle("Register Subject Papers");
        paperSubjectRegistrationDialog.setVisible(true);
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_addPaperActionPerformed

private void deleteSubjectPaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSubjectPaperActionPerformed
// TODO add your handling code here:
     try {
        int row = paperTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please Select Record");
        } else {
            Object id = paperTable.getModel().getValueAt(row, 0);
            if (id.toString().isEmpty()) {
            } else {
                
                int deleteResponse = JOptionPane.showInternalConfirmDialog(this, "Are You sure Want to DELETE\n the Selected Record?");
                if (deleteResponse == 0) {
                    boolean deleted = new Controller().deleteRecord(id.toString(), "paper", "Id");
                    if (deleted == true) {
                        JOptionPane.showMessageDialog(null, "Record Deleted Successfully");
                        paperTable.setModel(new Controller().paperTableModel());
                    } else {
                        JOptionPane.showMessageDialog(null, "ERROR\nRecord\n NOT Deleted Successfully.. Please try again");
                    }
                }
            }
        }
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_deleteSubjectPaperActionPerformed

private void deleteSubjectPaperRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSubjectPaperRegisterActionPerformed
// TODO add your handling code here:
    try {
        int row = subjectPaperTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please Select Record");
        } else {
            Object id = subjectPaperTable.getModel().getValueAt(row, 0);
            if (id.toString().isEmpty()) {
            } else {
                
                int deleteResponse = JOptionPane.showInternalConfirmDialog(this, "Are You sure Want to DELETE\n the Selected Record?");
                if (deleteResponse == 0) {
                    boolean deleted = new Controller().deleteRecord(id.toString(), "subjectpaperregister", "Id");
                    if (deleted == true) {
                        JOptionPane.showMessageDialog(null, "Record Deleted Successfully");
                        subjectPaperTable.setModel(new Controller().subjectPaperRegisterTableModel());
                    } else {
                        JOptionPane.showMessageDialog(null, "ERROR\nRecord\n NOT Deleted Successfully.. Please try again");
                    }
                }
            }
        }
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
    }
}//GEN-LAST:event_deleteSubjectPaperRegisterActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPaper;
    private javax.swing.JButton createPaper;
    private javax.swing.JButton deleteSubjectPaper;
    private javax.swing.JButton deleteSubjectPaperRegister;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JLabel logout;
    public static javax.swing.JTable paperTable;
    public static javax.swing.JTable subjectPaperTable;
    // End of variables declaration//GEN-END:variables
}
